package de.andreasbubolz.annotator.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GridElementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridElementAllPropertiesEquals(GridElement expected, GridElement actual) {
        assertGridElementAutoGeneratedPropertiesEquals(expected, actual);
        assertGridElementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridElementAllUpdatablePropertiesEquals(GridElement expected, GridElement actual) {
        assertGridElementUpdatableFieldsEquals(expected, actual);
        assertGridElementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridElementAutoGeneratedPropertiesEquals(GridElement expected, GridElement actual) {
        assertThat(expected)
            .as("Verify GridElement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridElementUpdatableFieldsEquals(GridElement expected, GridElement actual) {
        assertThat(expected)
            .as("Verify GridElement relevant properties")
            .satisfies(e -> assertThat(e.getX()).as("check x").isEqualTo(actual.getX()))
            .satisfies(e -> assertThat(e.getY()).as("check y").isEqualTo(actual.getY()))
            .satisfies(e -> assertThat(e.getW()).as("check w").isEqualTo(actual.getW()))
            .satisfies(e -> assertThat(e.getH()).as("check h").isEqualTo(actual.getH()))
            .satisfies(e -> assertThat(e.getChannel()).as("check channel").isEqualTo(actual.getChannel()))
            .satisfies(e -> assertThat(e.getRenderer()).as("check renderer").isEqualTo(actual.getRenderer()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridElementUpdatableRelationshipsEquals(GridElement expected, GridElement actual) {
        assertThat(expected)
            .as("Verify GridElement relationships")
            .satisfies(e -> assertThat(e.getLayout()).as("check layout").isEqualTo(actual.getLayout()))
            .satisfies(e -> assertThat(e.getGridElement()).as("check gridElement").isEqualTo(actual.getGridElement()));
    }
}
