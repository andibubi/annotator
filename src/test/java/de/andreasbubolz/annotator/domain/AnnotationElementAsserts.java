package de.andreasbubolz.annotator.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnnotationElementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationElementAllPropertiesEquals(AnnotationElement expected, AnnotationElement actual) {
        assertAnnotationElementAutoGeneratedPropertiesEquals(expected, actual);
        assertAnnotationElementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationElementAllUpdatablePropertiesEquals(AnnotationElement expected, AnnotationElement actual) {
        assertAnnotationElementUpdatableFieldsEquals(expected, actual);
        assertAnnotationElementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationElementAutoGeneratedPropertiesEquals(AnnotationElement expected, AnnotationElement actual) {
        assertThat(expected)
            .as("Verify AnnotationElement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationElementUpdatableFieldsEquals(AnnotationElement expected, AnnotationElement actual) {
        assertThat(expected)
            .as("Verify AnnotationElement relevant properties")
            .satisfies(e -> assertThat(e.getStartSec()).as("check startSec").isEqualTo(actual.getStartSec()))
            .satisfies(e -> assertThat(e.getText()).as("check text").isEqualTo(actual.getText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationElementUpdatableRelationshipsEquals(AnnotationElement expected, AnnotationElement actual) {
        assertThat(expected)
            .as("Verify AnnotationElement relationships")
            .satisfies(e -> assertThat(e.getAnnotation()).as("check annotation").isEqualTo(actual.getAnnotation()));
    }
}
