package de.andreasbubolz.annotator.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnnotationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationAllPropertiesEquals(Annotation expected, Annotation actual) {
        assertAnnotationAutoGeneratedPropertiesEquals(expected, actual);
        assertAnnotationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationAllUpdatablePropertiesEquals(Annotation expected, Annotation actual) {
        assertAnnotationUpdatableFieldsEquals(expected, actual);
        assertAnnotationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationAutoGeneratedPropertiesEquals(Annotation expected, Annotation actual) {
        assertThat(expected)
            .as("Verify Annotation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationUpdatableFieldsEquals(Annotation expected, Annotation actual) {
        assertThat(expected)
            .as("Verify Annotation relevant properties")
            .satisfies(e -> assertThat(e.getVideoId()).as("check videoId").isEqualTo(actual.getVideoId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnotationUpdatableRelationshipsEquals(Annotation expected, Annotation actual) {
        assertThat(expected)
            .as("Verify Annotation relationships")
            .satisfies(e -> assertThat(e.getAncestor()).as("check ancestor").isEqualTo(actual.getAncestor()));
    }
}
